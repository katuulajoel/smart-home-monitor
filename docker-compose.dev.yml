version: '3.8'

services:
  # Development Database
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: energy_monitor_db
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-energy_monitor}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-energy_monitor}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Development settings for services
  auth-service:
    build:
      context: .
      dockerfile: ./backend/auth-service/Dockerfile.dev
    working_dir: /app/backend/auth-service
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-energy_monitor}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${AUTH_SERVICE_PORT:-3001}
    ports:
      - "${AUTH_SERVICE_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        npm run migrate:dev &&
        npm run seed:dev &&
        npm run dev
      "

  # Telemetry Service
  telemetry-service:
    build:
      context: ./backend/telemetry-service
      dockerfile: Dockerfile.dev
    working_dir: /app/backend/telemetry-service
    environment:
      - NODE_ENV=development
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-energy_monitor}
    depends_on:
      - auth-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Chat Service
  chat-service:
    build:
      context: ./backend/chat-service
      dockerfile: Dockerfile.dev
    working_dir: /app/backend/chat-service
    environment:
      - NODE_ENV=development
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-energy_monitor}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - auth-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    working_dir: /app/frontend
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT:-3001}
      - TELEMETRY_SERVICE_PORT=${TELEMETRY_SERVICE_PORT:-3002}
      - CHAT_SERVICE_PORT=${CHAT_SERVICE_PORT:-3003}
      - FRONTEND_PORT=${FRONTEND_PORT:-3000}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./:/app
      - /app/frontend/node_modules
    depends_on:
      - auth-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
