version: '3.8'

services:
  # Development Database
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: energy_monitor_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-energy_monitor}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-energy_monitor} -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Development settings for services
  auth-service:
    build: 
      context: ./backend/auth-service
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-energy_monitor}
    volumes:
      - ./backend/auth-service:/app
      - /app/node_modules
    command: sh -c "npm run migrate && npm run seed && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy

  telemetry-service:
    environment:
      - NODE_ENV=development
    volumes:
      - ./backend/telemetry-service:/app
      - /app/node_modules
    command: sh -c "npm run migrate && npm run dev"

  chat-service:
    environment:
      - NODE_ENV=development
    volumes:
      - ./backend/chat-service:/app
      - /app/node_modules
    command: sh -c "npm run migrate && npm run dev"

  frontend:
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm start"

volumes:
  postgres_data:
  node_modules:
