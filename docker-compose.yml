version: '3.8'

services:
  # Database
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: energy_monitor_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-energy_monitor}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-energy_monitor} -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-energy_monitor}
      - JWT_SECRET=${JWT_SECRET:-your_secure_jwt_secret_key_here}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "npm run migrate && npm run seed && npm start"

  # Telemetry Service
  telemetry-service:
    build:
      context: ./backend/telemetry-service
      dockerfile: Dockerfile
    container_name: telemetry_service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-energy_monitor}
    depends_on:
      - postgres
      - auth-service
    restart: unless-stopped
    command: sh -c "npm run migrate && npm start"

  # Chat Service
  chat-service:
    build:
      context: ./backend/chat-service
      dockerfile: Dockerfile
    container_name: chat_service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-energy_monitor}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    depends_on:
      - postgres
      - auth-service
    restart: unless-stopped
    command: sh -c "npm run migrate && npm start"

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: energy_monitor_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_CHAT_API_URL=http://localhost:3003
      - NODE_ENV=development
    depends_on:
      - auth-service
      - telemetry-service
      - chat-service
    restart: unless-stopped

  # PGAdmin (optional, for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  node_modules:
